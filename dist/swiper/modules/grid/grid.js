export default function Grid({swiper:e,extendParams:r}){let t,a,i;r({grid:{rows:1,fill:"column"}});e.grid={initSlides:r=>{const{slidesPerView:l}=e.params,{rows:o,fill:s}=e.params.grid;a=t/o,i=Math.floor(r/o),t=Math.floor(r/o)===r/o?r:Math.ceil(r/o)*o,"auto"!==l&&"row"===s&&(t=Math.max(t,l*o))},updateSlide:(r,l,o,s)=>{const{slidesPerGroup:p,spaceBetween:d}=e.params,{rows:n,fill:c}=e.params.grid;let h,u,f;if("row"===c&&p>1){const e=Math.floor(r/(p*n)),a=r-n*p*e,i=0===e?p:Math.min(Math.ceil((o-e*n*p)/n),p);f=Math.floor(a/i),u=a-f*i+e*p,h=u+f*t/n,l.css({"-webkit-order":h,order:h})}else"column"===c?(u=Math.floor(r/n),f=r-u*n,(u>i||u===i&&f===n-1)&&(f+=1,f>=n&&(f=0,u+=1))):(f=Math.floor(r/a),u=r-f*a);l.css(s("margin-top"),0!==f?d&&`${d}px`:"")},updateWrapperSize:(r,a,i)=>{const{spaceBetween:l,centeredSlides:o,roundLengths:s}=e.params,{rows:p}=e.params.grid;if(e.virtualSize=(r+l)*t,e.virtualSize=Math.ceil(e.virtualSize/p)-l,e.$wrapperEl.css({[i("width")]:`${e.virtualSize+l}px`}),o){a.splice(0,a.length);const r=[];for(let t=0;t<a.length;t+=1){let i=a[t];s&&(i=Math.floor(i)),a[t]<e.virtualSize+a[0]&&r.push(i)}a.push(...r)}}}}