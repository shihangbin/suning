import{getDocument}from"ssr-window";import onTouchStart from"./onTouchStart.js";import onTouchMove from"./onTouchMove.js";import onTouchEnd from"./onTouchEnd.js";import onResize from"./onResize.js";import onClick from"./onClick.js";import onScroll from"./onScroll.js";let dummyEventAttached=!1;function dummyEventListener(){}const events=(o,e)=>{const t=getDocument(),{params:n,touchEvents:s,el:c,wrapperEl:r,device:i,support:a}=o,d=!!n.nested,u="on"===e?"addEventListener":"removeEventListener",v=e;if(a.touch){const e=!("touchstart"!==s.start||!a.passiveListener||!n.passiveListeners)&&{passive:!0,capture:!1};c[u](s.start,o.onTouchStart,e),c[u](s.move,o.onTouchMove,a.passiveListener?{passive:!1,capture:d}:d),c[u](s.end,o.onTouchEnd,e),s.cancel&&c[u](s.cancel,o.onTouchEnd,e)}else c[u](s.start,o.onTouchStart,!1),t[u](s.move,o.onTouchMove,d),t[u](s.end,o.onTouchEnd,!1);(n.preventClicks||n.preventClicksPropagation)&&c[u]("click",o.onClick,!0),n.cssMode&&r[u]("scroll",o.onScroll),n.updateOnWindowResize?o[v](i.ios||i.android?"resize orientationchange observerUpdate":"resize observerUpdate",onResize,!0):o[v]("observerUpdate",onResize,!0)};function attachEvents(){const o=this,e=getDocument(),{params:t,support:n}=o;o.onTouchStart=onTouchStart.bind(o),o.onTouchMove=onTouchMove.bind(o),o.onTouchEnd=onTouchEnd.bind(o),t.cssMode&&(o.onScroll=onScroll.bind(o)),o.onClick=onClick.bind(o),n.touch&&!dummyEventAttached&&(e.addEventListener("touchstart",dummyEventListener),dummyEventAttached=!0),events(o,"on")}function detachEvents(){events(this,"off")}export default{attachEvents:attachEvents,detachEvents:detachEvents};